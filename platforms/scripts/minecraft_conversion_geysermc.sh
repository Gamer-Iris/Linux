#!/bin/bash
######################################################################################################################################################
# ファイル   : minecraft_conversion_geysermc.sh
# 引数       : RSTEP（リスタートするジョブステップを指定）
# 復帰値     : 0 （正常終了）
#            : 10（異常終了）
# 
#-----------------------------------------------------------------------------------------------------------------------------------------------------
# 【修正履歴】
# V-001      : 2025/10/27                 Gamer-Iris   新規作成
# 
######################################################################################################################################################

#*****************************************************************************************************************************************************
# 定数エリア
#*****************************************************************************************************************************************************
# フラグ
JOB_RTN_CD=0
ABEND_FLG=0
RTN_CD=0

# エラーメッセージ設定
ERR_MESSAGE_01="コピーに失敗しました。"
ERR_MESSAGE_02="パッチに失敗しました。"

#*****************************************************************************************************************************************************
# 変数エリア
#*****************************************************************************************************************************************************
# 環境変数設定
## ワークフォルダ
WORK_DIR="${HOME}"/Linux/platforms/kubernetes/apps/minecraft
## 変換対象フォルダ
CONVERSION_FOLDER1=/mnt/share/kubernetes/minecraft/proxy
## GeyserMCConfig
CONVERSION_FILE_NAME1=config.yml
CONVERSION_FULL_PATH1_1="${CONVERSION_FOLDER1}"/plugins/floodgate/"${CONVERSION_FILE_NAME1}"
CONVERSION_FULL_PATH1_2="${CONVERSION_FOLDER1}"/plugins/Geyser-BungeeCord/"${CONVERSION_FILE_NAME1}"
BACKUP_FULL_PATH1_1="${CONVERSION_FOLDER1}"/plugins/floodgate/"${CONVERSION_FILE_NAME1}_bk"
BACKUP_FULL_PATH1_2="${CONVERSION_FOLDER1}"/plugins/Geyser-BungeeCord/"${CONVERSION_FILE_NAME1}_bk"
WORK_FULL_PATH1_1="${WORK_DIR}"/"${CONVERSION_FILE_NAME1}_1_1"
WORK_FULL_PATH1_2="${WORK_DIR}"/"${CONVERSION_FILE_NAME1}_1_2"

# STEPセット
NSTEP=""
RSTEP=$1
if [ "${RSTEP}" = "" ]; then
  NSTEP="JOBSTART"
else
  NSTEP="${RSTEP}"
fi

#*****************************************************************************************************************************************************
# JOBSTART_前準備
#*****************************************************************************************************************************************************
while true;do
  case "${NSTEP}" in
    "JOBSTART")
      NSTEP="STEP010"
    ;;

#*****************************************************************************************************************************************************
# STEP010
#*****************************************************************************************************************************************************
    "STEP010")
      # EXEC------------------------------------------------------------------------------------------------------------------------------------------
      cp -p "${CONVERSION_FULL_PATH1_1}" "${BACKUP_FULL_PATH1_1}" && cp -p "${CONVERSION_FULL_PATH1_1}" "${WORK_FULL_PATH1_1}" && \
      cp -p "${CONVERSION_FULL_PATH1_2}" "${BACKUP_FULL_PATH1_2}" && cp -p "${CONVERSION_FULL_PATH1_2}" "${WORK_FULL_PATH1_2}"
      # RETURN----------------------------------------------------------------------------------------------------------------------------------------
      RTN_CD=$?
      if [[ ${RTN_CD} -eq 0 ]]; then
        NSTEP="STEP020"
      else
        echo "${ERR_MESSAGE_01}"
        ABEND_FLG=1
        NSTEP="JOBEND"
        break
      fi
    ;;

#*****************************************************************************************************************************************************
# STEP020
#*****************************************************************************************************************************************************
    "STEP020")
      # EXEC------------------------------------------------------------------------------------------------------------------------------------------
      yq eval -i '.username-prefix = "BE_"' "${WORK_FULL_PATH1_1}" && \
      yq eval -i '.remote.auth-type = "floodgate"' "${WORK_FULL_PATH1_2}"
      # RETURN----------------------------------------------------------------------------------------------------------------------------------------
      RTN_CD=$?
      if [[ ${RTN_CD} -eq 0 ]]; then
        NSTEP="STEP030"
      else
        echo "${ERR_MESSAGE_02}"
        ABEND_FLG=1
        NSTEP="JOBEND"
        break
      fi
    ;;

#*****************************************************************************************************************************************************
# STEP030
#*****************************************************************************************************************************************************
    "STEP030")
      # EXEC------------------------------------------------------------------------------------------------------------------------------------------
      cp -p "${WORK_FULL_PATH1_1}" "${CONVERSION_FULL_PATH1_1}" && \
      cp -p "${WORK_FULL_PATH1_2}" "${CONVERSION_FULL_PATH1_2}"
      # RETURN----------------------------------------------------------------------------------------------------------------------------------------
      RTN_CD=$?
      if [[ ${RTN_CD} -eq 0 ]]; then
        NSTEP="JOBEND"
      else
        echo "${ERR_MESSAGE_01}"
        ABEND_FLG=1
        NSTEP="JOBEND"
        break
      fi
    ;;

#*****************************************************************************************************************************************************
# JOBEND_ループを抜ける
#*****************************************************************************************************************************************************
    "JOBEND")
      break
    ;;
  esac
done

#*****************************************************************************************************************************************************
# 後片付け
#*****************************************************************************************************************************************************
# アベンドフラグが立っているか確認
if [ ${ABEND_FLG} -eq 1 ]; then
  # リターンコードのセット
  JOB_RTN_CD=10
fi

# WORK内容の削除
rm -r "${WORK_FULL_PATH1_1}"
rm -r "${WORK_FULL_PATH1_2}"

# 呼出し元へリターンコードを返却
exit ${JOB_RTN_CD}
